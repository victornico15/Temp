---
- hosts: localhost
  tasks:
    # - name: Checagem se Possui dois SQL Server
    #   ansible.builtin.pause:        
    #     prompt: "Para continuar a instalação, digite as seguintes informações sobre o servidor SQL Server: Possui 2 banco de dados  SQL? Exemplo : Homologação e  Produção? S - sim N - nao"
    #   register: Chk_sql

    # - name: testing_sql_ip_whenChkEqualsN
    #   ansible.builtin.set_fact:
    #     testing_sql_ip: "{{ lookup('community.general.random_string', base64=True) }} "
    #   when:   Chk_sql.user_input |upper == "N" 

      

    # - name: "Read a file content"ls
    
    #   shell: |
    #     cat /proc/sys/kernel/random/uuid
    #   register: file_content
    - name: khonson
      ansible.builtin.pause:
        prompt: "IP de acesso do sql de Produção: "
      register: JHONSON   
      when: false         # SOH É FEITO 


  

    - name: Chk_sql
      ansible.builtin.pause:
        prompt: "Para continuar a instalação, digite as seguintes informações sobre o servidor SQL Server: Possui 2 banco de dados  SQL? Exemplo : Homologação e  Produção? S - sim N - nao"
      register: Chk_sql
      when: JHONSON is not skipped


    - name: Set and Fact
      ansible.builtin.set_fact:
          caralho: "{{ Chk_sql.user_input }}"
      when: Chk_sql.skipped is false
  
     
     
    


     
    - name: sql_ip 
      ansible.builtin.pause:
        prompt: "IP de acesso do sql de Produção: "
      register: sql_ip       # SOH É FEITO 
      when: Chk_sql.skipped is false  # SE ISSO FOR VERDADE<<<< QUANDO O DE CIMA É SKIPADO 
        
    



    - name: teste
      debug:
        var: Chk_sql 
        msg: "{{ caralho }}"
    
         

  #   - name : random UUID
  #       gather_fact: no 
  # vars:
  #   introspection_secret : "{{ 1000 | random | to_uuid | upper  }}"
  # - set_fact :
  #       introspection_secret="{{ 1000 | random | to_uuid | upper  }}"
  #     -debug var=introspection_secret